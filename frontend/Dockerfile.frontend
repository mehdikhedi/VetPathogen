# VetPathogen frontend Docker image
# Usage:
#   docker build -f frontend/Dockerfile.frontend -t vetpathogen-frontend ./frontend
#   docker run -p 3000:3000 vetpathogen-frontend

FROM node:20-alpine AS base
WORKDIR /app

# Install dependencies separately for caching
FROM base AS deps
COPY package.json package-lock.json ./
RUN npm ci

FROM base AS builder
ARG NEXT_PUBLIC_BACKEND_URL=http://127.0.0.1:8000
ENV NEXT_PUBLIC_BACKEND_URL=$NEXT_PUBLIC_BACKEND_URL
ENV NEXT_TELEMETRY_DISABLED=1
COPY --from=deps /app/node_modules ./node_modules
COPY . .
RUN npm run build

FROM base AS runner
ARG NEXT_PUBLIC_BACKEND_URL=http://127.0.0.1:8000
ENV NODE_ENV=production \
    PORT=3000 \
    NEXT_PUBLIC_BACKEND_URL=$NEXT_PUBLIC_BACKEND_URL \
    NEXT_TELEMETRY_DISABLED=1
WORKDIR /app

# Copy necessary assets for standalone output
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next/standalone ./standalone
COPY --from=builder /app/.next/static ./standalone/.next/static
COPY --from=builder /app/package.json ./standalone/package.json

EXPOSE 3000
CMD ["node", "standalone/server.js"]
